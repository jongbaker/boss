<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">


	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.6.100:1521:ORCL"></property>
		<property name="user" value="heima28"></property>
		<property name="password" value="heima28"></property>
	</bean>



	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

		<property name="dataSource" ref="dataSource"></property>

		<property name="packagesToScan" value="cc.mivisi.bos.domain"></property>

		<property name="PersistenceProvider">
			<bean class="org.hibernate.ejb.HibernatePersistence"></bean>
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">

				<property name="generateDdl" value="true"></property>
				<property name="database" value="ORACLE"></property>
				<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect"></property>
				<property name="showSql" value="true"></property>
			</bean>

		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"></bean>
		</property>
	</bean>


	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />
	<!-- 分层扫描 -->
	<context:component-scan base-package="com.mivisi.bos.web,cc.mivisi.bos.service" />

	<jpa:repositories base-package="cc.mivisi.bos.dao"></jpa:repositories>





	<!-- webService -->
	<jaxrs:server address="/orderService">
		<jaxrs:serviceBeans>
			<ref bean="orderServiceImpl" />
		</jaxrs:serviceBeans>

		<jaxrs:inInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingInInterceptor"></bean>
		</jaxrs:inInterceptors>
		<jaxrs:outInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"></bean>
		</jaxrs:outInterceptors>
	</jaxrs:server>

	<!-- 进行shiro的配置 -->
	<!-- 开启cglib代理 -->
	<!-- 1.把事务注解扫描proxy-target-class 改成ture 决定哪一种袋里 -->
	<!-- 2.添加bean 开启cglib代理 -->
	<bean id=""
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!-- -->
		<property name="proxyTargetClass" value="true"></property>
	</bean>

	<!-- 3.配置切面 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<!-- 注入 -->
		<property name="securityManager" ref="securityManager"></property>
	</bean>

	<bean id="shirofilter" class=" org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="loginUrl" value="/login.html"></property>
		<property name="successUrl" value="/index.html"></property>
		<property name="unauthorizedUrl" value="/unauthorized.html"></property>
		<!-- 规则 -->
		<!-- 思考set方法都是用这种方法写的吗 -->
		<!-- 最后存到了filterChainDefinitionMap -->
		<property name="filterChainDefinitions">
			<value>
				/css/* = anon
				/data/* = anon
				/images/* = anon
				/js/** = anon
				/validatecode.jsp = anon
				/userAction_login.action = anon
				/validatecode.jsp*=anon
				/courierAction_pageQuery.action=perms["courier"]
				/** = authc
			</value>
		</property>
	</bean>

	<!-- 注册缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
	</bean>

	<!-- 将缓存管理器注入安全管理器 -->
	<!-- 注册安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 注册realm -->
		<property name="realm" ref="userRealm" />
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager" />
	</bean>








</beans>











